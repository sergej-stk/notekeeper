// Code generated by protoc-gen-validate. DO NOT EDIT.
// source: proto/friend_service.proto

package pb;


@SuppressWarnings("all")
public class FriendServiceValidator {
	public static io.envoyproxy.pgv.ValidatorImpl validatorFor(Class clazz) {
		
		if (clazz.equals(pb.FriendService.Friend.class)) return new FriendValidator();
		if (clazz.equals(pb.FriendService.AddFriendRequest.class)) return new AddFriendRequestValidator();
		if (clazz.equals(pb.FriendService.AddFriendResponse.class)) return new AddFriendResponseValidator();
		if (clazz.equals(pb.FriendService.AnswerAddFriendRequest.class)) return new AnswerAddFriendRequestValidator();
		if (clazz.equals(pb.FriendService.CheckFriendshipRequest.class)) return new CheckFriendshipRequestValidator();
		if (clazz.equals(pb.FriendService.CheckFriendshipResponse.class)) return new CheckFriendshipResponseValidator();
		if (clazz.equals(pb.FriendService.RemoveFriendRequest.class)) return new RemoveFriendRequestValidator();
		if (clazz.equals(pb.FriendService.GetFriendListResponse.class)) return new GetFriendListResponseValidator();
		return null;
	}


/**
	 * Validates {@code Friend} protobuf objects.
	 */
	public static class FriendValidator implements io.envoyproxy.pgv.ValidatorImpl<pb.FriendService.Friend> {
		
	
		
	
	
	

	public void assertValid(pb.FriendService.Friend proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	// no validation rules for Username

	// no validation rules for Accept

	
	
	}
}
/**
	 * Validates {@code AddFriendRequest} protobuf objects.
	 */
	public static class AddFriendRequestValidator implements io.envoyproxy.pgv.ValidatorImpl<pb.FriendService.AddFriendRequest> {
		
	
	
	

	public void assertValid(pb.FriendService.AddFriendRequest proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
			io.envoyproxy.pgv.StringValidation.email(".pb.AddFriendRequest.username", proto.getUsername());
	
	
	}
}
/**
	 * Validates {@code AddFriendResponse} protobuf objects.
	 */
	public static class AddFriendResponseValidator implements io.envoyproxy.pgv.ValidatorImpl<pb.FriendService.AddFriendResponse> {
		
	
	
	

	public void assertValid(pb.FriendService.AddFriendResponse proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	// no validation rules for Success

	
	
	}
}
/**
	 * Validates {@code AnswerAddFriendRequest} protobuf objects.
	 */
	public static class AnswerAddFriendRequestValidator implements io.envoyproxy.pgv.ValidatorImpl<pb.FriendService.AnswerAddFriendRequest> {
		
	
		
	
	
	

	public void assertValid(pb.FriendService.AnswerAddFriendRequest proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
			io.envoyproxy.pgv.StringValidation.email(".pb.AnswerAddFriendRequest.username", proto.getUsername());
	// no validation rules for Accept

	
	
	}
}
/**
	 * Validates {@code CheckFriendshipRequest} protobuf objects.
	 */
	public static class CheckFriendshipRequestValidator implements io.envoyproxy.pgv.ValidatorImpl<pb.FriendService.CheckFriendshipRequest> {
		
	
	
	

	public void assertValid(pb.FriendService.CheckFriendshipRequest proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
			io.envoyproxy.pgv.StringValidation.email(".pb.CheckFriendshipRequest.username", proto.getUsername());
	
	
	}
}
/**
	 * Validates {@code CheckFriendshipResponse} protobuf objects.
	 */
	public static class CheckFriendshipResponseValidator implements io.envoyproxy.pgv.ValidatorImpl<pb.FriendService.CheckFriendshipResponse> {
		
	
	
	

	public void assertValid(pb.FriendService.CheckFriendshipResponse proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	// no validation rules for Status

	
	
	}
}
/**
	 * Validates {@code RemoveFriendRequest} protobuf objects.
	 */
	public static class RemoveFriendRequestValidator implements io.envoyproxy.pgv.ValidatorImpl<pb.FriendService.RemoveFriendRequest> {
		
	
	
	

	public void assertValid(pb.FriendService.RemoveFriendRequest proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
			io.envoyproxy.pgv.StringValidation.email(".pb.RemoveFriendRequest.username", proto.getUsername());
	
	
	}
}
/**
	 * Validates {@code GetFriendListResponse} protobuf objects.
	 */
	public static class GetFriendListResponseValidator implements io.envoyproxy.pgv.ValidatorImpl<pb.FriendService.GetFriendListResponse> {
		
	
	
	

	public void assertValid(pb.FriendService.GetFriendListResponse proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
			io.envoyproxy.pgv.RepeatedValidation.forEach(proto.getFriendsList(), item -> {
				
			// Validate friends
			if (true) index.validatorFor(item).assertValid(item);
			});
	
	
	}
}
}

