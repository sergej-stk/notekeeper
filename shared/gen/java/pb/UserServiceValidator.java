// Code generated by protoc-gen-validate. DO NOT EDIT.
// source: proto/user_service.proto

package pb;


@SuppressWarnings("all")
public class UserServiceValidator {
	public static io.envoyproxy.pgv.ValidatorImpl validatorFor(Class clazz) {
		
		if (clazz.equals(pb.UserService.Me.class)) return new MeValidator();
		if (clazz.equals(pb.UserService.GetMeResponse.class)) return new GetMeResponseValidator();
		return null;
	}


/**
	 * Validates {@code Me} protobuf objects.
	 */
	public static class MeValidator implements io.envoyproxy.pgv.ValidatorImpl<pb.UserService.Me> {
		
	
		
	
	
	

	public void assertValid(pb.UserService.Me proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	// no validation rules for Username

	// no validation rules for FullName

	
	
	}
}
/**
	 * Validates {@code GetMeResponse} protobuf objects.
	 */
	public static class GetMeResponseValidator implements io.envoyproxy.pgv.ValidatorImpl<pb.UserService.GetMeResponse> {
		
	
	
	

	public void assertValid(pb.UserService.GetMeResponse proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
			// Validate me
			if (proto.hasMe()) index.validatorFor(proto.getMe()).assertValid(proto.getMe());
	
	
	}
}
}

