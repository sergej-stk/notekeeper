// Code generated by protoc-gen-validate. DO NOT EDIT.
// source: proto/note_service.proto

package pb;


@SuppressWarnings("all")
public class NoteServiceValidator {
	public static io.envoyproxy.pgv.ValidatorImpl validatorFor(Class clazz) {
		
		if (clazz.equals(pb.NoteService.Note.class)) return new NoteValidator();
		if (clazz.equals(pb.NoteService.GetAllNotesResponse.class)) return new GetAllNotesResponseValidator();
		return null;
	}


/**
	 * Validates {@code Note} protobuf objects.
	 */
	public static class NoteValidator implements io.envoyproxy.pgv.ValidatorImpl<pb.NoteService.Note> {
		
	
		
	
		
	
		
	
	
	

	public void assertValid(pb.NoteService.Note proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	// no validation rules for Id

	// no validation rules for Username

	// no validation rules for Timestamp

	// no validation rules for Text

	
	
	}
}
/**
	 * Validates {@code GetAllNotesResponse} protobuf objects.
	 */
	public static class GetAllNotesResponseValidator implements io.envoyproxy.pgv.ValidatorImpl<pb.NoteService.GetAllNotesResponse> {
		
	
	
	

	public void assertValid(pb.NoteService.GetAllNotesResponse proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
			io.envoyproxy.pgv.RepeatedValidation.forEach(proto.getNotesList(), item -> {
				
			// Validate notes
			if (true) index.validatorFor(item).assertValid(item);
			});
	
	
	}
}
}

